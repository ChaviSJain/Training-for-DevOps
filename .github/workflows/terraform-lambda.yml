name: terraform-lambda
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write   # needed for OIDC
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_IN_AUTOMATION: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: tf-lambda-${{ github.ref }}
      cancel-in-progress: false
    # environment: prod

    steps:
      - uses: actions/checkout@v5

      # Package Lambda
      - name: Zip Lambda
        run: |
          mkdir -p artifacts
          cd .github/workflows/lambda
          python -m pip install --upgrade pip
          # If you have deps, create a package dir and zip them; otherwise zip the handler only:
          zip -r ../artifacts/lambda.zip handler.py

      # AWS auth via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Terraform setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Fmt
        working-directory: terraform
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform plan \
            -var "region=${AWS_REGION}" \
            -var "function_name=hello-from-actions" \
            -var "lambda_zip_path=${{ github.workspace }}/artifacts/lambda.zip" \
            -out plan.out

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: terraform
        run: terraform apply -auto-approve plan.out
        
